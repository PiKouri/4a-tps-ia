1.2/ 
- situation_initiale(S), joueur_initial(J).
	Nous ne donnons pas d'information sur la situation initiale
	Le Joueur initial est "x" par convention.
- situation_initiale(S), nth1(3,S,Lig), nth1(2,Lig,o).
	Nous voulons que dans la situation initiale, 3ème ligne, 2ème colonne nous ayons un "o"

Tests unitaires

possible([x,x,x],x).
true.
possible([_,_,_],x).
true.
possible([x,_,x],x).
true.
possible([o,_,x],x).
false.
possible([o,_,_],x).
false.

alignement_gagnant([x,x,x],x).
true.
alignement_gagnant([_,_,_],x).
false.
alignement_gagnant([x,_,x],x).
false.
alignement_gagnant([o,_,x],x).
false.
alignement_gagnant([o,_,_],x).
false.

alignement_perdant([x,x,x],o).
true.
alignement_perdant([o,o,o],x).
true.
alignement_perdant([_,o,o],x).
false.

2/
Tests unitaires

heuristique(x,[[_,_,_],[x,x,x],[_,_,_]],H).
H = 10000.
heuristique(x,[[_,_,_],[_,_,x],[_,_,_]],H).
H = 8.
heuristique(x,[[_,_,_],[_,x,_],[_,_,_]],H).
H = 16.
heuristique(o,[[_,_,_],[_,x,_],[_,_,_]],H).
H = -16.

3/
Quel prédicat permet de connaître sous forme de liste l’ensemble des couples [Coord, Situation_Resultante]?
=> successeurs(J,Etat,Succ), Succ est la liste des couples

Joueur x, Situation initiale : 
Succ = [
[[1,1],[[x,_,_],[_,_,_],[_,_,_]]],
[[1,2],[[_,x,_],[_,_,_],[_,_,_]]],
[[1,3],[[_,_,x],[_,_,_],[_,_,_]]],
[[2,1],[[_,_,_],[x,_,_],[_,_,_]]],
[[2,2],[[_,_,_],[_,x,_],[_,_,_]]],
[[2,3],[[_,_,_],[_,_,x],[_,_,_]]],
[[3,1],[[_,_,_],[_,_,_],[x,_,_]]],
[[3,2],[[_,_,_],[_,_,_],[_,x,_]]],
[[3,3],[[_,_,_],[_,_,_],[_,_,x]]]].

4/
Test unitaire : test_meilleur.

Test main(B,V,Pmax)
  B   |V  |Pmax
[2,2] | 16|1
[2,2] | 4 |2
[2,2] | 12|3
[2,2] | 2 |4
[2,2] | 10|5
[2,2] | 2 |6
[2,2] | 6 |7
[3,3] | 10000  |8
[2,2] |   |9